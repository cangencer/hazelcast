<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE suppressions PUBLIC
        "-//Puppy Crawl//DTD Suppressions 1.1//EN"
        "http://www.puppycrawl.com/dtds/suppressions_1_1.dtd">
<suppressions>

    <!-- Suppress strict duplicate code checking -->
    <suppress checks="StrictDuplicateCode" files="\.java" lines="1-15"/>

    <!-- Suppress checking of copyright notice -->
    <suppress checks="Header" files="classloading[\\/]ThreadLocalLeakTestUtils"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]buildutils[\\/]ElementParser"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]logging[\\/]Log4j2Factory"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]concurrent[\\/]package-info"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]cluster[\\/]fd[\\/]PhiAccrualFailureDetector"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]instance[\\/]impl[\\/]MobyNames"/>

    <!--  Suppress checking of copyright notice, adapted from Agrona project  -->
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]HashUtil"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]QuickMath"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]concurrent[\\/]AbstractConcurrentArrayQueue"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]concurrent[\\/]ManyToOneConcurrentArrayQueue"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]concurrent[\\/]QueuedPipe"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]concurrent[\\/]Pipe"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]concurrent[\\/]OneToOneConcurrentArrayQueue"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Long2ObjectHashMap"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Long2LongHashMap"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]IntIterator"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Hashing"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]MapDelegatingSet"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]BiInt2ObjectMap"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]IntHashSet"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]LongIterator"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]LongHashSet"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Int2ObjectHashMap"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Int2ObjectHashMapTest"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Long2ObjectHashMapTest"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]BiInt2ObjectMapTest"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]LongHashSetTest"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]IntHashSetTest"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Long2LongHashMapTest"/>
    <suppress checks="Header" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]graph[\\/]BronKerboschCliqueFinder"/>

    <!-- Javadoc checks -->

    <!-- Exclude internal, implementation and template packages from JavaDoc checks -->
    <suppress checks="Javadoc(Package|Method|Type|Variable)" files="[\\/]impl[\\/]"/>
    <suppress checks="Javadoc(Package|Method|Type|Variable)" files="[\\/]template[\\/]"/>
    <suppress checks="Javadoc(Package|Method|Type|Variable)" files="com[\\/]hazelcast[\\/](\w+[\\/])*internal[\\/]"/>

    <!-- These files contain public API without Javadoc -->
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]buildutils[\\/]ElementParser"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]cache[\\/]CacheEventType"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]client[\\/]util[\\/]AddressHelper"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]client[\\/]console[\\/]ClientConsoleApp"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]cluster[\\/]Address"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]cluster[\\/]ClassFilter"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]cluster[\\/]ClusterState"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]console[\\/]ConsoleApp"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]console[\\/]LineReader"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]collection[\\/]QueueStoreFactory"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]core[\\/]LifecycleEvent"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]core[\\/]ItemEventType"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]core[\\/]IFunction"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]cp[\\/]exception[\\/]CPGroupDestroyedException"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]cp[\\/]exception[\\/]CPSubsystemException"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]memory[\\/]MemoryUnit"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]memory[\\/]MemorySize"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]memory[\\/]NativeOutOfMemoryError"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]hotrestart[\\/]BackupTaskStatus"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]query[\\/]PredicateBuilder"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]query[\\/]QueryConstants"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]spi[\\/]MemberAddressProvider"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]spi[\\/]exception[\\/]WrongTargetException"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]spi[\\/]discovery[\\/]integration[\\/]DiscoveryServiceSettings"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]spi[\\/]partitiongroup[\\/]MemberGroup"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]spi[\\/]partitiongroup[\\/]PartitionGroupStrategy"/>
    <suppress checks="Javadoc(Method|Type)" files="com[\\/]hazelcast[\\/]transaction[\\/]"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]version[\\/]MemberVersion"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]version[\\/]Version"/>
    <suppress checks="Javadoc(Method)" files="org[\\/]apache[\\/]calcite[\\/]plan[\\/]HazelcastRelOptCluster"/>

    <!-- Too many files in these packages are missing Javadoc, so whole packages are ignored -->
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]config"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]client[\\/]config"/>
    <suppress checks="Javadoc(Method|Type)" files="com[\\/]hazelcast[\\/]config[\\/]security"/>
    <suppress checks="Javadoc(Method|Type|Variable)" files="com[\\/]hazelcast[\\/]instance[\\/]"/>
    <suppress checks="Javadoc(Method|Type)" files="com[\\/]hazelcast[\\/]logging[\\/]"/>
    <suppress checks="Javadoc(Method|Type)" files="com[\\/]hazelcast[\\/]multimap[\\/]"/>
    <suppress checks="Javadoc(Method|Type|Variable)" files="com[\\/]hazelcast[\\/]nio[\\/]"/>
    <suppress checks="Javadoc(Method|Type|Variable)" files="com[\\/]hazelcast[\\/]partition[\\/]"/>
    <suppress checks="Javadoc(Method|Type|Variable)" files="com[\\/]hazelcast[\\/]security[\\/]"/>
    <suppress checks="Javadoc(Method)" files="com[\\/]hazelcast[\\/]spring"/>

    <!-- Concurrent queue composed of many parts for padding that avoids false sharing -->
    <suppress checks="OuterTypeNumber" files="AbstractConcurrentArrayQueue\.java"/>

    <!-- SerializerHook -->
    <suppress checks="MethodLength|ReturnCount|AnonInnerLength" files="SerializerHook\.java$"/>

    <!-- ConsoleApp -->
    <suppress checks="FileLength"
              files="com[\\/]hazelcast[\\/]console[\\/]ConsoleApp"/>
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]client[\\/]console[\\/]ClientConsoleApp"/>

    <!-- Cache -->
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]cache[\\/]impl[\\/]AbstractCacheRecordStore"/>

    <!-- Config -->
    <suppress checks="ExecutableStatementCount" files="com[\\/]hazelcast[\\/]config[\\/]CacheConfig"/>
    <suppress checks="ExecutableStatementCount"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]codec[\\/]holder[\\/]CacheConfigHolder"/>
    <suppress checks="ParameterNumber"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]task[\\/]dynamicconfig[\\/]QueryCacheConfigHolder"/>
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]config[\\/]Config"/>
    <suppress checks="FileLength"
              files="com[\\/]hazelcast[\\/]internal[\\/]dynamicconfig[\\/]DynamicConfigurationAwareConfig"/>

    <!-- couldn't change structure because of API -->
    <suppress checks="BooleanExpressionComplexity|ExecutableStatementCount"
              files="com[\\/]hazelcast[\\/]config[\\/]MapConfig"/>
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]internal[\\/]config[\\/]MemberDomConfigProcessor"/>

    <!-- YAML -->
    <suppress checks="BooleanExpressionComplexity" files="com[\\/]hazelcast[\\/]internal[\\/]yaml[\\/]YamlUtil"/>

    <!-- Memory -->
    <suppress checks="IllegalImport" files="com[\\/]hazelcast[\\/]internal[\\/]memory[\\/]impl[\\/]UnsafeUtil"/>

    <!-- JSON -->
    <suppress checks="" files="[\\/]com[\\/]hazelcast[\\/]internal[\\/]json[\\/]"/>

    <!-- Client -->
    <suppress checks="FileLength"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]proxy[\\/]ClientMapProxy"/>
    <suppress checks="ExecutableStatementCount"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]clientside[\\/]HazelcastClientInstanceImpl"/>
    <suppress checks="VisibilityModifier"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]clientside[\\/]HazelcastClientProxy"/>
    <suppress checks="MagicNumber"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]codec[\\/]builtin[\\/]FixedSizeTypesCodec"/>
    <suppress checks="MagicNumber"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]codec[\\/]builtin[\\/]CustomTypeFactory"/>

    <!-- Client Protocol (auto-generated) -->
    <suppress checks="Header|Length|Whitespace|MethodParamPad"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]DefaultMessageTaskFactoryProvider"/>
    <suppress checks="ExecutableStatementCount|Length"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]clientside[\\/]ClientExceptionFactory.java"/>
    <suppress checks="ExecutableStatementCount|Length"
              files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]ClientExceptions.java"/>
    <suppress checks="UnusedImport|DeclarationOrder" files="com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]codec[\\/]"/>
    <suppress checks="UnusedImport|DeclarationOrder"
              files="com[\\/]hazelcast[\\/]internal[\\/]longregister[\\/]client[\\/]codec[\\/]"/>

    <!-- Query -->
    <suppress checks="ReturnCount"
              files="com[\\/]hazelcast[\\/]query[\\/]impl[\\/]getters[\\/]ReflectionHelper"/>
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]query[\\/]impl[\\/]bitmap[\\/]SparseIntArray"/>

    <!-- SPI -->
    <suppress checks="FileLength"
              files="com[\\/]hazelcast[\\/]spi[\\/]impl[\\/]AbstractInvocationFuture"/>

    <!-- Security -->
    <suppress checks="BooleanExpressionComplexity"
              files="com[\\/]hazelcast[\\/]security[\\/]permission[\\/]QueuePermission"/>
    <suppress checks="BooleanExpressionComplexity"
              files="com[\\/]hazelcast[\\/]security[\\/]permission[\\/]RingBufferPermission"/>
    <suppress checks="BooleanExpressionComplexity"
              files="com[\\/]hazelcast[\\/]security[\\/]permission[\\/]CachePermission"/>
    <suppress checks="BooleanExpressionComplexity"
              files="com[\\/]hazelcast[\\/]security[\\/]permission[\\/]ReplicatedMapPermission"/>
    <suppress checks="BooleanExpressionComplexity" files="com[\\/]hazelcast[\\/]security[\\/]permission[\\/]MapPermission"/>
    <suppress checks="BooleanExpressionComplexity" files="com[\\/]hazelcast[\\/]security[\\/]permission[\\/]ListPermission"/>

    <!-- Partition -->
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]internal[\\/]partition[\\/]impl[\\/]InternalPartitionServiceImpl"/>
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]internal[\\/]partition[\\/]impl[\\/]MigrationManager"/>

    <!-- NIO -->
    <suppress checks="ExecutableStatementCount"
              files="com[\\/]hazelcast[\\/]nio[\\/]tcp[\\/]TcpIpConnectionManager"/>
    <suppress checks="MagicNumber"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]ByteArrayObjectDataInput"/>
    <suppress checks="MagicNumber"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]ByteArrayObjectDataOutput"/>
    <suppress checks="MagicNumber"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]ByteBufferObjectDataInput"/>
    <suppress checks="MagicNumber" files="com[\\/]hazelcast[\\/]nio[\\/]CipherHelper"/>
    <suppress checks="MagicNumber"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]portable[\\/]DefaultPortableReader"/>
    <suppress checks="MagicNumber"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]portable[\\/]DefaultPortableWriter"/>
    <suppress checks="ParameterNumber"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]AbstractSerializationService"/>
    <suppress checks="ParameterNumber"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]SerializationServiceV1"/>
    <suppress checks="MagicNumber" files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]UnsafeObjectDataInput"/>
    <suppress checks="MagicNumber" files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]UnsafeObjectDataOutput"/>
    <suppress checks="IllegalType"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]HashMapStreamSerializer"/>
    <suppress checks="IllegalType"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]LinkedHashMapStreamSerializer"/>
    <suppress checks="IllegalType"
              files="com[\\/]hazelcast[\\/]internal[\\/]serialization[\\/]impl[\\/]TreeMapStreamSerializer"/>

    <!-- Spring -->
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]spring[\\/]HazelcastConfigBeanDefinitionParser"/>

    <!-- Spring framework breaks the IllegalType check in its own implementation -->
    <suppress checks="IllegalType" files="com[\\/]hazelcast[\\/]spring[\\/].*DefinitionParser"/>
    <suppress checks="IllegalType" files="com[\\/]hazelcast[\\/]spring[\\/]hibernate[\\/].*DefinitionParser"/>

    <!-- Management -->
    <suppress checks="VisibilityModifier" files="com[\\/]hazelcast[\\/]internal[\\/]management[\\/]dto[\\/]\w*"/>

    <!-- Map -->
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]map[\\/]IMap"/>

    <!-- Adopted public domain code with different style -->
    <suppress
            checks="MagicNumber|FileLength|DeclarationOrder|RedundantModifier"
            files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]ConcurrentReferenceHashMap"/>
    <suppress checks="" files="com[\\/]hazelcast[\\/]internal[\\/]util[\\/]collection[\\/]Object2LongHashMap"/>

    <!-- Exclude Clover instrumented sources -->
    <suppress checks="" files="[\\/]src-instrumented[\\/]"/>

    <!-- Test suppressions -->
    <suppress
            checks="FileLength|MethodLength|LineLength|AnonInnerLength|ReturnCount|ExecutableStatementCount"
            files="[\\/]src[\\/]test[\\/]"/>
    <suppress
            checks="Javadoc|MagicNumber|IllegalImport|IllegalType"
            files="[\\/]src[\\/]test[\\/]"/>
    <suppress
            checks="BooleanExpressionComplexity|RegexpSinglelineJava"
            files="[\\/]src[\\/]test[\\/]"/>
    <suppress
            checks="TypeName|MemberName|ConstantName|LocalVariableName|LocalFinalVariableName|MethodName"
            files="[\\/]src[\\/]test[\\/]"/>
    <suppress
            checks="FinalClass|HideUtilityClassConstructor|EmptyBlock|DeclarationOrder|VisibilityModifier"
            files="[\\/]src[\\/]test[\\/]"/>
    <suppress
            checks="ExplicitInitialization|EqualsHashCode|MissingSwitchDefault|TrailingComment"
            files="[\\/]src[\\/]test[\\/]"/>
    <suppress checks="LineLength|VisibilityModifier|AvoidStarImport|RegexpSingleline|ParameterNumber"
              files="src[\\/]main[\\/]java[\\/]com[\\/]hazelcast[\\/]client[\\/]impl[\\/]protocol[\\/]codec[\\/]"/>
    <suppress checks="LineLength|VisibilityModifier|AvoidStarImport|RegexpSingleline|ParameterNumber"
              files="src[\\/]main[\\/]java[\\/]com[\\/]hazelcast[\\/]internal[\\/]longregister[\\/]client[\\/]codec[\\/]"/>
    <suppress checks="" files="src[\\/]test[\\/]java[\\/]com[\\/]hazelcast[\\/]client[\\/]protocol[\\/]compatibility[\\/]"/>
    <suppress checks="" files="src[\\/]test[\\/]java[\\/]com[\\/]hazelcast[\\/]nio[\\/]serialization[\\/]compatibility[\\/]"/>

    <!-- module-info.java -->
    <suppress checks="" files="[\\/]module-info"/>

    <!-- impl packages are private API by contract, allow public members -->
    <suppress checks="VisibilityModifier" files="[\\/]impl[\\/]"/>

    <!-- Jet specific -->

    <!-- Suppress checking of copyright notice in a file derived from Apache Tez -->
    <suppress checks="Header" files="TopologicalSorter"/>
    <suppress checks="Header" files="generated"/>

    <!-- Exclude these packages from JavaDoc checks -->
<!--    <suppress checks="Javadoc(Package|Type|Method|Variable)" files="SerializerHook"/>-->

    <!-- Exclude command line classes from Javadoc checks -->
    <suppress checks="Javadoc(Type|Method|Variable)" files="com[\\/]hazelcast[\\/]jet[\\/]server[\\/]" />

    <!-- Exclude variations of JDK classes from Javadoc checks -->
    <suppress checks="Javadoc(Type|Variable)" files="com[\\/]hazelcast[\\/]jet[\\/]function" />

    <!-- Suppress checks for test code -->
    <suppress checks="LineLength" files="DecoratorTest.java"/>

    <!-- Suppress checks for examples code -->
    <suppress checks="Javadoc|Name|MagicNumber|VisibilityModifier|HideUtilityClassConstructor|RegexpSinglelineJava" files="[\\/]examples[\\/]"/>

    <!-- Suppress maximum line count of a large factory file with lot of javadoc -->
    <suppress checks="FileLength" files="com[\\/]hazelcast[\\/]jet[\\/]aggregate[\\/]AggregateOperations.java"/>

    <!-- Suppress checks for auto-generated client protocol codecs -->
    <suppress checks="UnusedImports|LineLength|VisibilityModifier|AvoidStarImport|RegexpSingleline|ParameterNumber"
    files="src[\\/]main[\\/]java[\\/]com[\\/]hazelcast[\\/]jet[\\/]impl[\\/]client[\\/]protocol[\\/]codec[\\/]"/>

    <!-- Suppress checks for auto-generated test classes -->
    <suppress checks="" files="generated-test-sources"/>

    <!-- Suppress checks for properties files -->
    <suppress checks="" files=".properties"/>
</suppressions>
